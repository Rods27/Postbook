{"version":3,"sources":["utils/collor-pallete.js","components/header/style.js","components/header/Header.js","components/postscontainer/styles.js","redux/actions/index.js","utils/addToFavorite.js","utils/favoriteToRedux.js","components/postscontainer/PostsContainer.js","components/postdetails/styles.js","utils/postsIntegration.js","utils/postsPaging.js","components/postdetails/PostDetails.js","components/favoritesposts/styles.js","components/favoritesposts/FavoritesPosts.js","pages/posts/styles.js","pages/posts/Posts.js","pages/home/Home.js","pages/details/styles.js","pages/details/Details.js","pages/favorites/styles.js","pages/favorites/Favorites.js","routes/index.js","App.js","reportWebVitals.js","redux/reducers/postsReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["collorPallete","lightBlack","lighterBlack","lightestBlack","darkWhite","darkerWhite","darkestWhite","trybeGreen","blue","orange","darkOrange","favorites","HeaderContainer","styled","header","Header","history","this","props","id","onClick","push","className","React","Component","Container","div","Post","FAVORITES","favoritesAction","array","type","addToFavorite","elem","dispatchFavorites","stateFavorites","a","localStorageStars","JSON","parse","localStorage","getItem","includes","newStateFavorite","filter","e","setItem","stringify","newlocalStorageStars","favoriteToRedux","PostsContainer","state","paging","infiniteScroll","bind","document","removeEventListener","statePosts","addEventListener","posts","setState","querySelector","getBoundingClientRect","bottom","window","innerHeight","increaseState","render","prevState","localStorageFavorites","map","index","name","title","body","comments","length","connect","postsReducer","favoritePosts","dispatch","postsIntegration","details","forEach","elem1","commentsArr","users","elem2","userId","postId","result","insideList","postsPaging","PostDetails","actualPost","getActualPostIntoState","pathname","location","pagePostId","Number","split","i","email","FavoritesPosts","Posts","stars","Home","Details","Favorites","Routes","exact","path","component","App","createBrowserHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","post","rootReducer","combineReducers","action","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","store","basename","process","getElementById"],"mappings":"8/sKAceA,EAdO,CACpBC,WAAY,OACZC,aAAc,UACdC,cAAe,UACfC,UAAW,UACXC,YAAa,UACbC,aAAc,UACdC,WAAY,UACZC,KAAM,YACNC,OAAQ,UACRC,WAAY,UACZC,UAAW,WCRAC,EAAkBC,IAAOC,OAAV,grBASNd,EAAcS,OACzBT,EAAcI,UAIZJ,EAAcI,UAKZJ,EAAcS,OACHT,EAAcI,UAQ3BJ,EAAcI,UAEZJ,EAAcW,W,OCRdI,E,4JApBb,WACE,IAAQC,EAAYC,KAAKC,MAAjBF,QACR,OACE,eAACJ,EAAD,WACE,wBAAQO,GAAG,OAAOC,QAAU,kBAAMJ,EAAQK,KAAK,WAA/C,SACE,mBAAGC,UAAU,kBAEf,0CACA,wBAAQH,GAAG,YAAYC,QAAU,kBAAMJ,EAAQK,KAAK,eAApD,SACE,mBAAGC,UAAU,yB,GAVFC,IAAMC,W,wBCDdC,EAAYZ,IAAOa,IAAV,2FAMTC,EAAOd,IAAOa,IAAV,o0CAwCF1B,EAAcM,aAQZN,EAAcW,UAGdX,EAAcM,cC5DlBsB,EAAY,YAGZC,EAAkB,SAACC,GAAD,MAAY,CACzCC,KAAMH,EACNE,U,yBCLa,SAAeE,EAA9B,sC,4CAAe,WAA6BC,EAAMC,EAAmBC,GAAtD,mBAAAC,EAAA,uDACPC,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,WACpCC,SAAST,EAAKd,KAO5BwB,EAAmBR,EAAeS,QAAO,SAACC,GAAD,OAAOA,EAAE1B,KAAOc,EAAKd,MACpEe,EAAkBS,GAClBH,aAAaM,QAAQ,YAAaR,KAAKS,UAAUJ,IAC3CK,EAAuBX,EAAkBO,QAAO,SAACC,GAAD,OAAOA,IAAMZ,EAAKd,MACxEqB,aAAaM,QAAQ,QAASR,KAAKS,UAAUC,MAV7Cb,EAAed,KAAKY,GACpBC,EAAkBC,GAClBE,EAAkBhB,KAAKY,EAAKd,IAC5BqB,aAAaM,QAAQ,QAASR,KAAKS,UAAUV,IAC7CG,aAAaM,QAAQ,YAAaR,KAAKS,UAAUZ,KAPtC,4C,sBCAA,SAASc,EAAgBf,GACnCM,aAAa7B,WAIduB,EAH8BI,KAAKC,MACjCC,aAAaC,QAAQ,e,QCKrBS,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQ,GAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALV,E,wDAQd,WACEC,SAASC,oBAAoB,SAAUvC,KAAKoC,kB,+BAG9C,WACE,IAAQnB,EAAsBjB,KAAKC,MAA3BgB,kBACRjB,KAAKwC,aACLR,EAAgBf,GAChBqB,SAASG,iBAAiB,SAAUzC,KAAKoC,kB,gCAG3C,WACqBpC,KAAKkC,MAAhBC,OACK,IACXG,SAASG,iBAAiB,SAAUzC,KAAKoC,kB,wBAI7C,WACE,IACMI,EADYxC,KAAKC,MAAfyC,MACiB,GACzB1C,KAAK2C,SAAS,CAAEH,iB,4BAGlB,WAC0BF,SAASM,cAAc,mBAC9CC,wBAAwBC,QACFC,OAAOC,cAC5BhD,KAAKiD,gBACLX,SAASC,oBAAoB,SAAUvC,KAAKoC,gBAC5CpC,KAAK2C,SAAS,CAAEO,QAAQ,O,2BAI5B,WACE,IAAQR,EAAU1C,KAAKC,MAAfyC,MACR1C,KAAK2C,UAAS,SAAAQ,GAAS,MAAK,CAC1BhB,OAAQgB,EAAUhB,OAAS,MAE7B,MAA+BnC,KAAKkC,MAA5BC,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,WACbL,EAAS,IAAIK,EAAWpC,KAAX,MAAAoC,EAAU,YAASE,EAAMP,O,oBAG3C,WAAU,IAAD,OACP,EAAuDnC,KAAKC,MAApDF,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,kBAAmBC,EAApC,EAAoCA,eAC5BsB,EAAexC,KAAKkC,MAApBM,WACFY,EAAwB/B,KAAKC,MAAMC,aAAaC,QAAQ,UAC9D,OACE,cAAChB,EAAD,CAAWH,UAAU,iBAArB,SACImC,GAAcA,EAAWa,KAAI,SAACrC,EAAMsC,GAAP,OAC7B,eAAC5C,EAAD,WACE,qBAAKL,UAAU,WAAf,SACE,6BAAKW,EAAKuC,SAEZ,sBAAKlD,UAAU,YAAf,UACE,yBAAQF,QAAU,kBAAMJ,EAAQK,KAAR,iBAAuBY,EAAKd,MAApD,UACE,6BAAKc,EAAKwC,QACV,4BAAIxC,EAAKyC,UAEX,gCACE,wBAAQvD,GAAG,WAAWC,QAAS,WAC7BY,EAAcC,EAAMC,EAAmBC,GACvC,EAAKyB,SAAS,CAAEjD,WAAW,KAF7B,SAII0D,EAAsB3B,SAAST,EAAKd,IACpC,mBAAGG,UAAU,mBAEb,mBAAGA,UAAU,sBAGjB,oBAAGH,GAAG,WAAN,6BAA+Bc,EAAK0C,SAASC,kBApBxCL,Y,GA3DQhD,IAAMC,WAsGpBqD,eAZS,SAAC1B,GAAD,MAAY,CAClChB,eAAgBgB,EAAM2B,aAAaC,kBAGV,SAACC,GAAD,MAAe,CACxC9C,kBAAmB,SAACJ,GAAD,OAAWkD,EAASnD,EAAgBC,QAO1C+C,CAA6C3B,GC3G/CzB,EAAYZ,IAAOa,IAAV,uKAUTC,EAAOd,IAAOa,IAAV,8wCA2BF1B,EAAcM,aAQZN,EAAcW,UAGdX,EAAcM,aAQLN,EAAcM,c,wBCtDzB,SAAS2E,EAAiBC,GAWvC,OAVAvB,EAAMwB,SAAQ,SAACC,GACb,IAAIC,EAAc,GAClBC,EAAMH,SAAQ,SAACI,GACVH,EAAMI,SAAWD,EAAMpE,KAAIiE,EAAMZ,KAAOe,EAAMf,SAEnDG,EAASQ,SAAQ,SAACI,GACbH,EAAMjE,KAAOoE,EAAME,QAAQJ,EAAYhE,KAAKkE,MAEjDH,EAAMT,SAAWU,KAEfH,EAAgBvB,ECdP,WACb,IAAI+B,EAAS,GACTC,EAAa,GAQjB,OAPAhC,EAAMwB,SAAQ,SAAClD,GACb0D,EAAWtE,KAAKY,GACU,KAAtB0D,EAAWf,SACbc,EAAOrE,KAAKsE,GACZA,EAAa,OAGVD,EDKAE,G,cEPHC,E,kDACJ,aAAe,IAAD,8BACZ,gBACK1C,MAAQ,CACX2C,WAAY,IAHF,E,qDAOd,WAEE7C,EAD8BhC,KAAKC,MAA3BgB,mBAERjB,KAAK8E,2B,oCAGP,WACE,IAA+BC,EAAiB/E,KAAKC,MAA7CF,QAAWiF,SAAYD,SACzBE,EAAaC,OAAOH,EAASI,MAAM,KAAK,IAExCN,EADQb,GAAiB,GACNrC,QAAO,SAACX,GAAD,OAAUA,EAAKd,KAAO+E,KACtDjF,KAAK2C,SAAS,CAAEkC,iB,oBAGlB,WAAU,IAAD,OACP,EAA8C7E,KAAKC,MAA3CgB,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,eACnB2D,EAAe7E,KAAKkC,MAApB2C,WACFzB,EAAwB/B,KAAKC,MAAMC,aAAaC,QAAQ,UAC9D,OACE,cAAC,EAAD,UACKqD,GAAcA,EAAWlB,OAAS,GAChCkB,EAAWxB,KAAI,SAACrC,EAAMoE,GAAP,OAChB,eAAC,EAAD,WACE,sBAAK/E,UAAU,WAAf,UACE,6BAAKW,EAAKuC,OACV,wBAAQrD,GAAG,WAAWC,QAAU,WAC9BY,EAAcC,EAAMC,EAAmBC,GACvC,EAAKyB,SAAS,CAAEjD,WAAW,KAF7B,SAII0D,EAAsB3B,SAAST,EAAKd,IACpC,mBAAGG,UAAU,mBAEb,mBAAGA,UAAU,yBAInB,6BAAKW,EAAKwC,QACV,4BAAIxC,EAAKyC,OACT,sBAAKpD,UAAU,WAAf,4BAEIW,EAAK0C,SAASL,KAAI,SAACiB,EAAOc,GAAR,OAClB,sBAAelF,GAAG,UAAlB,UACE,4BAAIoE,EAAMe,QACV,6BAAKf,EAAMf,OACX,4BAAIe,EAAMb,SAHD2B,WAnBLA,Y,GA9BE9E,IAAMC,WA6EjBqD,eAbS,SAAC1B,GAAD,MAAY,CAClChB,eAAgBgB,EAAM2B,aAAaC,kBAGV,SAACC,GAAD,MAAe,CACxC9C,kBAAmB,SAACJ,GAAD,OAAWkD,EAASnD,EAAgBC,QAQ1C+C,CAA6CgB,GCpF/CpE,EAAYZ,IAAOa,IAAV,mKASTC,EAAOd,IAAOa,IAAV,o7CA0CF1B,EAAcM,aAQZN,EAAcW,UAGdX,EAAcM,cCzDzBiG,E,uKACJ,WAEEtD,EAD8BhC,KAAKC,MAA3BgB,qB,oBAIV,WAAU,IAAD,OACP,EAAuDjB,KAAKC,MAApDF,EAAR,EAAQA,QAASmB,EAAjB,EAAiBA,eAAgBD,EAAjC,EAAiCA,kBAC3BmC,EAAwB/B,KAAKC,MAAMC,aAAaC,QAAQ,UAC9D,OACE,cAAC,EAAD,UACKN,GAAkBA,EAAeyC,OAAS,EACzCzC,EAAemC,KAAI,SAACrC,EAAMsC,GAAP,OACrB,eAAC,EAAD,WACE,qBAAKjD,UAAU,WAAf,SACE,6BAAKW,EAAKuC,SAEZ,sBAAKlD,UAAU,YAAf,UACE,yBAAQF,QAAU,kBAAMJ,EAAQK,KAAR,iBAAuBY,EAAKd,MAApD,UACE,6BAAKc,EAAKwC,QACV,4BAAIxC,EAAKyC,UAEX,gCACE,wBAAQvD,GAAG,WAAWC,QAAS,WAC7BY,EAAcC,EAAMC,EAAmBC,GACvC,EAAKyB,SAAS,CAAEjD,WAAW,KAF7B,SAII0D,EAAsB3B,SAAST,EAAKd,IACpC,mBAAGG,UAAU,mBAEb,mBAAGA,UAAU,sBAGjB,oBAAGH,GAAG,WAAN,6BAA+Bc,EAAK0C,SAASC,kBApBxCL,MAyBX,8BACE,sE,GAvCiBhD,IAAMC,WA6DpBqD,eAbS,SAAC1B,GAAD,MAAY,CAClChB,eAAgBgB,EAAM2B,aAAaC,kBAGV,SAACC,GAAD,MAAe,CACxC9C,kBAAmB,SAACJ,GAAD,OAAWkD,EAASnD,EAAgBC,QAQ1C+C,CAA6C0B,GCnE/C9E,GAAYZ,IAAOa,IAAV,6HCsBP8E,G,4JAjBb,WACE,IAAQxF,EAAYC,KAAKC,MAAjBF,QAGR,OAFIwB,aAAa7B,WAAW6B,aAAaM,QAAQ,YAAaR,KAAKS,UAAU,KACzEP,aAAaiE,OAAOjE,aAAaM,QAAQ,QAASR,KAAKS,UAAU,KAEnE,eAAC,GAAD,WACE,cAAC,EAAD,CAAQ/B,QAAUA,IAClB,cAAC,EAAD,CAAgBA,QAAUA,EAAU2C,MAAQsB,a,GARhC1D,IAAMC,WCWXkF,G,4JAbb,WAGE,OAFoBzF,KAAKC,MAAjBF,QACAK,KAAK,UAEX,4B,GALaE,IAAMC,WCDZC,GAAYZ,IAAOa,IAAV,6HCqBPiF,G,4JAjBb,WACE,IAAQ3F,EAAYC,KAAKC,MAAjBF,QAGR,OAFIwB,aAAa7B,WAAW6B,aAAaM,QAAQ,YAAaR,KAAKS,UAAU,KACzEP,aAAaiE,OAAOjE,aAAaM,QAAQ,QAASR,KAAKS,UAAU,KAEnE,eAAC,GAAD,WACE,cAAC,EAAD,CAAQ/B,QAAUA,IAClB,cAAC,EAAD,CAAaA,QAAUA,W,GARTO,IAAMC,WCHfC,GAAYZ,IAAOa,IAAV,kGCmBPkF,G,4JAfb,WACE,IAAQ5F,EAAYC,KAAKC,MAAjBF,QACR,OACE,eAAC,GAAD,WACE,cAAC,EAAD,CAAQA,QAAUA,IAClB,cAAC,EAAD,CAAgBA,QAAUA,W,GANVO,IAAMC,W,QCYfqF,G,4JAZb,WACE,OACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYN,KAClC,cAAC,KAAD,CAAOI,OAAK,EAACC,KAAK,SAASC,UAAYR,KACvC,cAAC,KAAD,CAAOM,OAAK,EAACC,KAAK,aAAaC,UAAYL,KAC3C,cAAC,KAAD,CAAOG,OAAK,EAACC,KAAK,aAAaC,UAAYJ,Y,GAP9BrF,IAAMC,W,SCQZyF,G,4JAPb,WACE,OACE,cAAC,GAAD,CAAQjG,QAAUkG,qB,GAHN3F,IAAMC,WCQT2F,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6CCLRQ,GAAgB,CACpBC,KAAM,GACN9C,cAAe,ICDjB,IAEe+C,GAFKC,2BAAgB,CAAEjD,aDIvB,WAAgD,IAAhC3B,EAA+B,uDAAvByE,GAAeI,EAAQ,uCAC5D,OAAQA,EAAOjG,MACf,KAAKH,EACL,OAAO,6BACFuB,GADL,IAEE4B,cAAeiD,EAAOlG,QAExB,QACE,OAAOqB,MEVI8E,0BACbH,GACAI,+BAAoBC,2BAAgBC,Q,MCEtCC,IAASlE,OACP,cAAC,IAAD,CAAUmE,MAAQA,GAAlB,SACE,cAAC,KAAD,CAAeC,SAAUC,YAAzB,SACE,cAAC,GAAD,QAGJjF,SAASkF,eAAe,SAM1BtB,O","file":"static/js/main.866df61a.chunk.js","sourcesContent":["const collorPallete = {\n  lightBlack: '#333',\n  lighterBlack: '#434343',\n  lightestBlack: '#5d5c5c',\n  darkWhite: '#ece8e8',\n  darkerWhite: '#e2e2e2',\n  darkestWhite: '#c6c6c6',\n  trybeGreen: '#0fa36b',\n  blue: 'royalblue',\n  orange: '#ff6e40',\n  darkOrange: '#ff3d00',\n  favorites: '#fff159',\n}\n\nexport default collorPallete;\n","import styled from 'styled-components';\nimport collorPallete from '../../utils/collor-pallete'\n\nexport const HeaderContainer = styled.header`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 55px;\n  background-color: ${collorPallete.orange};\n  color: ${collorPallete.darkWhite};\n  z-index: 999;\n  #home {\n    transition: .1s;\n    color: ${collorPallete.darkWhite};\n    margin-right: 5px;\n    border-radius: 8px;\n    padding: 3px;\n    &:hover {\n      color: ${collorPallete.orange};\n      background-color: ${collorPallete.darkWhite}\n      }\n    i {\n      font-size: 26px;\n    }\n  }\n  #favorites {\n    transition: .1s;\n    color: ${collorPallete.darkWhite};\n    &:hover {\n      color: ${collorPallete.favorites};\n      }\n    i {\n      font-size: 26px;\n    }\n  }\n  button {\n    appearance: none;\n    border: none;\n    background: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HeaderContainer } from './style'\n\nclass Header extends React.Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <HeaderContainer>\n        <button id=\"home\" onClick={ () => history.push('/posts') }>\n          <i className=\"fas fa-home\"></i>\n        </button>\n        <h1>Postbook</h1>\n        <button id=\"favorites\" onClick={ () => history.push('/favorites') }>\n          <i className=\"fas fa-star\"></i>\n        </button>\n      </HeaderContainer>\n    );\n  }\n}\n\nHeader.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default Header;\n","import styled from 'styled-components';\nimport collorPallete from '../../utils/collor-pallete'\n\nexport const Container = styled.div`\n  width: 85%;\n  max-width: 1200px;\n  margin: 60px 0 20px 0;\n`;\n\nexport const Post = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border: 0.1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 12px;\n  margin: 15px 0;\n  padding: 5px 10px;\n  box-shadow: 0 .1px 1px 0px rgba(0, 0, 0, 0.1) , 0 .3px 2px 0px rgba(0, 0, 0, 0.1);\n  .name-div {\n    display: flex;\n    align-items: center;\n    height: 35px;\n    border-bottom: 0.1px solid rgba(0, 0, 0, 0.1);\n    font-size: 18px;\n  }\n  .post-body {\n    display: flex;\n    flex-direction: column;\n    width: 92%;\n    #comments {\n      position: absolute;\n      bottom: -7px;\n      right: 9px;\n      font-size: 13.5px;\n      font-weight: 300;\n    }\n    button {\n      appearance: none;\n      border: none;\n      background: none;\n      cursor: pointer;\n      text-align: left;\n      font-size: 15.5px;\n    }\n    #favorite {\n      position: absolute;\n      top: 5px;\n      right: 0px;\n      transition: .1s;\n      color: ${collorPallete.darkestWhite};\n      i {\n        font-size: 30px;\n        text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n        -moz-text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n        -webkit-text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n      }\n      .on {\n        color: ${collorPallete.favorites};\n      }\n      .off {\n        color: ${collorPallete.darkestWhite};\n      }\n    }\n  }\n`;\n","export const FAVORITES = 'FAVORITES';\nexport const DETAILS = 'DETAILS';\n\nexport const favoritesAction = (array) => ({\n  type: FAVORITES,\n  array\n});\n","export default async function addToFavorite(elem, dispatchFavorites, stateFavorites) {\n  const localStorageStars = JSON.parse(localStorage.getItem('stars'));\n  if(!localStorageStars.includes(elem.id)) {\n    stateFavorites.push(elem);\n    dispatchFavorites(stateFavorites);\n    localStorageStars.push(elem.id);\n    localStorage.setItem('stars', JSON.stringify(localStorageStars));\n    localStorage.setItem('favorites', JSON.stringify(stateFavorites));\n  } else {\n    const newStateFavorite = stateFavorites.filter((e) => e.id !== elem.id);\n    dispatchFavorites(newStateFavorite)\n    localStorage.setItem('favorites', JSON.stringify(newStateFavorite));\n    const newlocalStorageStars = localStorageStars.filter((e) => e !== elem.id);\n    localStorage.setItem('stars', JSON.stringify(newlocalStorageStars));\n  }\n}","export default function favoriteToRedux(dispatchFavorites) {\n  if(localStorage.favorites) {\n    const localStorageFavorites = JSON.parse(\n      localStorage.getItem('favorites')\n    );\n    dispatchFavorites(localStorageFavorites);\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Post } from './styles';\nimport { favoritesAction } from '../../redux/actions';\nimport addToFavorite from '../../utils/addToFavorite';\nimport favoriteToRedux from '../../utils/favoriteToRedux';\n\nclass PostsContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      paging: 0,\n    };\n    this.infiniteScroll = this.infiniteScroll.bind(this);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentDidMount() {\n    const { dispatchFavorites } = this.props;\n    this.statePosts();\n    favoriteToRedux(dispatchFavorites);\n    document.addEventListener('scroll', this.infiniteScroll);\n  }\n\n  componentDidUpdate() {\n    const { paging } = this.state;\n    if (paging < 10) {\n      document.addEventListener('scroll', this.infiniteScroll);\n    }\n  }\n\n  statePosts() {\n    const { posts } = this.props;\n    const statePosts = posts[0];\n    this.setState({ statePosts });\n  }\n\n  infiniteScroll() {\n    const containerHeight = document.querySelector('.post-container')\n    .getBoundingClientRect().bottom \n    if (containerHeight <= window.innerHeight) {\n      this.increaseState();\n      document.removeEventListener('scroll', this.infiniteScroll);\n      this.setState({ render: true });\n    }\n  }\n\n  increaseState() {\n    const { posts } = this.props;\n    this.setState(prevState => ({\n      paging: prevState.paging + 1 \n    }));\n    const { paging, statePosts } = this.state;\n    if(paging < 10) statePosts.push(...posts[paging]);\n  }\n\n  render() {\n    const { history, dispatchFavorites, stateFavorites } = this.props;\n    const { statePosts } = this.state;\n    const localStorageFavorites = JSON.parse(localStorage.getItem('stars'));\n    return (\n      <Container className=\"post-container\">\n        { statePosts && statePosts.map((elem, index) => (\n          <Post key={index}>\n            <div className=\"name-div\">\n              <h5>{elem.name}</h5>\n            </div>\n            <div className=\"post-body\">\n              <button onClick={ () => history.push(`/posts/${elem.id}`) }>\n                <h4>{elem.title}</h4>\n                <p>{elem.body}</p>\n              </button>\n              <div>\n                <button id=\"favorite\" onClick={() => {\n                  addToFavorite(elem, dispatchFavorites, stateFavorites);\n                  this.setState({ favorites: true });\n                }}>\n                  { localStorageFavorites.includes(elem.id) ?\n                    <i className=\"fas fa-star on\"></i>\n                    :\n                    <i className=\"fas fa-star off\"></i>\n                  }\n                </button>\n                <p id=\"comments\">Comentários: {elem.comments.length}</p>\n              </div>\n            </div>\n          </Post>\n        )\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stateFavorites: state.postsReducer.favoritePosts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFavorites: (array) => dispatch(favoritesAction(array)),\n});\n\nPostsContainer.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsContainer);\n","import styled from 'styled-components';\nimport collorPallete from '../../utils/collor-pallete'\n\nexport const Container = styled.div`\n  width: 65%;\n  max-width: 1000px;\n  margin: 60px 0 20px 0;\n  @media (max-width: 750px) {\n    width: 85%;\n    min-width: 230px;\n  }\n`;\n\nexport const Post = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border: 0.1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 12px;\n  margin: 15px 0;\n  padding: 5px 15px;\n  box-shadow: 0 .1px 1px 0px rgba(0, 0, 0, 0.1) , 0 .3px 2px 0px rgba(0, 0, 0, 0.1);\n  .name-div {\n    display: flex;\n    align-items: center;\n    height: 65px;\n    border-bottom: 0.1px solid rgba(0, 0, 0, 0.1);\n    h5 { font-size: 18px; }\n    button {\n      appearance: none;\n      border: none;\n      background: none;\n      cursor: pointer;\n      text-align: left;\n    }\n    #favorite {\n      position: absolute;\n      top: 12px;\n      right: 5px;\n      transition: .1s;\n      color: ${collorPallete.darkestWhite};\n      i {\n        font-size: 40px;\n        text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n        -moz-text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n        -webkit-text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n      }\n      .on {\n        color: ${collorPallete.favorites};\n      }\n      .off {\n        color: ${collorPallete.darkestWhite};\n      }\n    }\n  }\n  .comments {\n    align-self: center;\n    width: 95%;\n    #comment {\n      background-color: ${collorPallete.darkestWhite};\n      padding: 3px 15px;\n      margin: 10px 0;\n      border-radius: 8px;\n    }\n  }\n\n`;\n","import users from '../data/users.json';\nimport posts from '../data/posts.json';\nimport comments from '../data/comments.json';\nimport postsPaging from './postsPaging';\n\nexport default function postsIntegration(details) {\n  posts.forEach((elem1) => {\n    let commentsArr = [];\n    users.forEach((elem2) => {\n      if(elem1.userId === elem2.id) elem1.name = elem2.name;\n    })\n    comments.forEach((elem2) => {\n      if(elem1.id === elem2.postId) commentsArr.push(elem2);\n    })\n    elem1.comments = commentsArr;\n  });\n  if (details) return posts\n  return postsPaging();\n}\n\n","import posts from '../data/posts.json';\n\nexport default function postsPaging () {\n  let result = [];\n  let insideList = [];\n  posts.forEach((elem) => {\n    insideList.push(elem);\n    if (insideList.length === 10) {\n      result.push(insideList);\n      insideList = [];\n    }\n  });\n  return result;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container, Post } from './styles';\nimport { favoritesAction } from '../../redux/actions';\nimport addToFavorite from '../../utils/addToFavorite';\nimport favoriteToRedux from '../../utils/favoriteToRedux';\nimport postsIntegration from '../../utils/postsIntegration';\n\n\nclass PostDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      actualPost: [],\n    }\n  }\n\n  componentDidMount() {\n    const { dispatchFavorites } = this.props;\n    favoriteToRedux(dispatchFavorites);\n    this.getActualPostIntoState();\n  }\n\n  getActualPostIntoState() {\n    const { history: { location: { pathname } } } = this.props;\n    const pagePostId = Number(pathname.split('/')[2]);\n    const posts = postsIntegration(true);\n    const actualPost = posts.filter((elem) => elem.id === pagePostId);\n    this.setState({ actualPost });\n  }\n\n  render() {\n    const { dispatchFavorites, stateFavorites } = this.props;\n    const { actualPost } = this.state;\n    const localStorageFavorites = JSON.parse(localStorage.getItem('stars'));\n    return (\n      <Container>\n        { (actualPost && actualPost.length > 0)\n          && actualPost.map((elem, i) => (\n            <Post key={ i }>\n              <div className=\"name-div\">\n                <h5>{elem.name}</h5>\n                <button id=\"favorite\" onClick={ () => {\n                  addToFavorite(elem, dispatchFavorites, stateFavorites);\n                  this.setState({ favorites: true });\n                }}>\n                  { localStorageFavorites.includes(elem.id) ?\n                    <i className=\"fas fa-star on\"></i>\n                    :\n                    <i className=\"fas fa-star off\"></i>\n                  }\n                </button>\n              </div>\n              <h4>{elem.title}</h4>\n              <p>{elem.body}</p>\n              <div className=\"comments\">\n                Comentários:\n                { elem.comments.map((elem2, i) => (\n                  <div key={ i } id=\"comment\">\n                    <p>{elem2.email}</p>\n                    <h5>{elem2.name}</h5>\n                    <p>{elem2.body}</p>\n                  </div>\n                ))}\n              </div>\n            </Post>\n          ))\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stateFavorites: state.postsReducer.favoritePosts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFavorites: (array) => dispatch(favoritesAction(array)),\n});\n\nPostDetails.propTypes = {\n  stateFavorites: PropTypes.arrayOf(PropTypes.object),\n  dispatchFavorites: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetails);\n","import styled from 'styled-components';\nimport collorPallete from '../../utils/collor-pallete'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  width: 85%;\n  max-width: 1200px;\n  margin: 60px 0 20px 0;\n`;\n\nexport const Post = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  border: 0.1px solid rgba(0, 0, 0, 0.1);\n  width: 520px;\n  height: 190px;\n  border-radius: 12px;\n  margin: 15px 0;\n  padding: 5px 10px;\n  box-shadow: 0 .1px 1px 0px rgba(0, 0, 0, 0.1) , 0 .3px 2px 0px rgba(0, 0, 0, 0.1);\n  .name-div {\n    display: flex;\n    align-items: center;\n    height: 35px;\n    border-bottom: 0.1px solid rgba(0, 0, 0, 0.1);\n    font-size: 18px;\n  }\n  .post-body {\n    display: flex;\n    flex-direction: column;\n    width: 92%;\n    #comments {\n      position: absolute;\n      bottom: -7px;\n      right: 9px;\n      font-size: 13.5px;\n      font-weight: 300;\n    }\n    button {\n      appearance: none;\n      border: none;\n      background: none;\n      cursor: pointer;\n      text-align: left;\n      font-size: 15.5px;\n    }\n    #favorite {\n      position: absolute;\n      top: 5px;\n      right: 0px;\n      transition: .1s;\n      color: ${collorPallete.darkestWhite};\n      i {\n        font-size: 30px;\n        text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n        -moz-text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n        -webkit-text-shadow: 0 0 2px rgba(0, 0, 0, .2), 0 0 2px rgba(0, 0, 0, .2);\n      }\n      .on {\n        color: ${collorPallete.favorites};\n      }\n      .off {\n        color: ${collorPallete.darkestWhite};\n      }\n    }\n  }\n  @media (max-width: 450px) {\n    height: 30%;\n    min-width: 230px;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { favoritesAction } from '../../redux/actions';\nimport { Container, Post } from './styles'\nimport addToFavorite from '../../utils/addToFavorite';\nimport favoriteToRedux from '../../utils/favoriteToRedux';\n\nclass FavoritesPosts extends React.Component {\n  componentDidMount() {\n    const { dispatchFavorites } = this.props;\n    favoriteToRedux(dispatchFavorites);\n  }\n\n  render() {\n    const { history, stateFavorites, dispatchFavorites } = this.props;\n    const localStorageFavorites = JSON.parse(localStorage.getItem('stars'));\n    return (\n      <Container>\n        { (stateFavorites && stateFavorites.length > 0)\n          ? stateFavorites.map((elem, index) => (\n          <Post key={index}>\n            <div className=\"name-div\">\n              <h5>{elem.name}</h5>\n            </div>\n            <div className=\"post-body\">\n              <button onClick={ () => history.push(`/posts/${elem.id}`)}>\n                <h4>{elem.title}</h4>\n                <p>{elem.body}</p>\n              </button>\n              <div>\n                <button id=\"favorite\" onClick={() => {\n                  addToFavorite(elem, dispatchFavorites, stateFavorites);\n                  this.setState({ favorites: true });\n                }}>\n                  { localStorageFavorites.includes(elem.id) ?\n                    <i className=\"fas fa-star on\"></i>\n                    :\n                    <i className=\"fas fa-star off\"></i>\n                  }\n                </button>\n                <p id=\"comments\">Comentários: {elem.comments.length}</p>\n              </div>\n            </div>\n          </Post>\n        )) : (\n          <div>\n            <p>Não há posts Favoritos.</p>\n          </div>\n        )\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stateFavorites: state.postsReducer.favoritePosts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchFavorites: (array) => dispatch(favoritesAction(array)),\n});\n\nFavoritesPosts.propTypes = {\n  stateFavorites: PropTypes.arrayOf(PropTypes.object),\n  dispatchFavorites: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPosts);\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, PostsContainer } from '../../components/';\nimport postsIntegration from '../../utils/postsIntegration';\nimport { Container } from './styles';\n\nclass Posts extends React.Component {\n  render() {\n    const { history } = this.props;\n    if(!localStorage.favorites) localStorage.setItem('favorites', JSON.stringify([]));\n    if(!localStorage.stars) localStorage.setItem('stars', JSON.stringify([]));\n    return (\n      <Container>\n        <Header history={ history } />\n        <PostsContainer history={ history } posts={ postsIntegration() } />\n      </Container>\n    );\n  }\n}\n\nPosts.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default Posts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Home extends React.Component {\n  render() {\n    const { history } = this.props;\n    history.push('/posts');\n    return (\n      <div></div>\n    );\n  }\n}\n\nHome.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from './styles';\nimport { Header, PostDetails } from '../../components/';\n\nclass Details extends React.Component {\n  render() {\n    const { history } = this.props;\n    if(!localStorage.favorites) localStorage.setItem('favorites', JSON.stringify([]));\n    if(!localStorage.stars) localStorage.setItem('stars', JSON.stringify([]));\n    return (\n      <Container>\n        <Header history={ history } />\n        <PostDetails history={ history } />\n      </Container>\n    );\n  }\n}\n\nDetails.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default Details;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, FavoritesPosts } from '../../components'\nimport { Container } from './styles'\n\nclass Favorites extends React.Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <Container>\n        <Header history={ history } />\n        <FavoritesPosts history={ history } />\n      </Container>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  history: PropTypes.shape().isRequired,\n};\n\nexport default Favorites;\n","import React from 'react';\nimport { Posts, Home, Details, Favorites } from '../pages';\nimport { Switch, Route } from 'react-router-dom';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Home } />\n        <Route exact path=\"/posts\" component={ Posts } />\n        <Route exact path=\"/posts/:id\" component={ Details } />\n        <Route exact path=\"/favorites\" component={ Favorites } />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes","import React from 'react';\nimport Routes from './routes';\nimport { createBrowserHistory } from 'history';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Routes history={ createBrowserHistory() }/>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FAVORITES } from '../actions';\n\nconst INITIAL_STATE = {\n  post: [],\n  favoritePosts: [],\n};\n\nexport default function musics(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case FAVORITES:\n  return {\n    ...state,\n    favoritePosts: action.array,\n  };\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\n\nconst rootReducer = combineReducers({ postsReducer });\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}